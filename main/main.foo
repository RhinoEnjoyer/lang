T: @type s32;
Y: @type f128;

fn_template: @type @fn(arg1: ~T; arg2: ~Y)(s32);
val: s32 = 10 -> @pipe*20 -> @pipe*10;


func: fn_template = (
  
);

// fin := init_value 			->
//       transform(@pipe)  ->
//       transform2(@pipe) ->
//       transform3(@pipe) ->
//       transform4(@pipe);

// type: @type s32;
// type2: @type f128;

// fnname: @fn(something: type; pipe: @mut ~type2; the_rest: s32)(s32) = ();

// some_other_var: type2 = 10.0e-20;
// foo := some_other_var -> fnname(10; @pipe; 3000);
